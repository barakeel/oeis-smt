;; sequence(s): A212089
;; terms: 0 1 9 45 139 333 684 1258 2133 3402 5167 7542 10656 14647 19665 25875 33451 42579 53460 66304
;; small program: (1 + ((loop(x + y, x, x * x) * x) * x)) div (1 + 2)
;; fast program: (2 + (((x * x) * x) * (1 + ((x + x) + x)))) div (2 + (2 + 2))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ x y))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (forall ((x Int)) (= (h0 x) (* x x))))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (small x) (divf (+ 1 (* (* (v0 x) x) x)) (+ 1 2)))))
(assert (forall ((x Int)) (= (fast x) (divf (+ 2 (* (* (* x x) x) (+ 1 (+ (+ x x) x)))) (+ 2 (+ 2 2))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
