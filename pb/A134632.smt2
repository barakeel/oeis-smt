;; sequence(s): A134632
;; terms: 0 6 176 1278 5280 15950 39456 84966 165248 297270 502800 809006 1249056 1862718 2696960 3806550 5254656 7113446 9464688 12400350
;; small program: (loop2(x + y, x, 2 + 2, (x * x) * x, x) - 2) * (x * x)
;; fast program: ((((1 + 2) + (((2 * (x + x)) + x) * x)) * x) - 2) * (x * x)
(set-logic UFNIA)
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun i0 (Int) Int)
(declare-fun j0 (Int) Int)
(declare-fun u0 (Int Int Int) Int)
(declare-fun v0 (Int Int Int) Int)
(declare-fun w0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ x y))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 (+ 2 2)))
(assert (forall ((x Int)) (= (i0 x) (* (* x x) x))))
(assert (forall ((x Int)) (= (j0 x) x)))
(assert (forall ((x Int) (y Int) (z Int)) (= (u0 x y z) (ite (<= x 0) y (f0 (u0 (- x 1) y z) (v0 (- x 1) y z))))))
(assert (forall ((x Int) (y Int) (z Int)) (= (v0 x y z) (ite (<= x 0) z (g0 (u0 (- x 1) y z))))))
(assert (forall ((x Int)) (= (w0 x) (u0 h0 (i0 x) (j0 x)))))
(assert (forall ((x Int)) (= (small x) (* (- (w0 x) 2) (* x x)))))
(assert (forall ((x Int)) (= (fast x) (* (- (* (+ (+ 1 2) (* (+ (* 2 (+ x x)) x) x)) x) 2) (* x x)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
