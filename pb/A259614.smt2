;; sequence(s): A259614
;; terms: 17 29 53 65 89 101 125 137 161 173 197 209 233 245 269 281 305 317 341 353
;; small program: 1 + (2 * loop(2 + (2 * ((x div 2) + x)), 2, x))
;; fast program: 1 + (2 * (2 + (2 * ((1 + 2) * (1 + ((x div 2) + x))))))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (+ 2 (* 2 (+ (divf x 2) x))))))
(assert (= g0 2))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (+ 1 (* 2 (v0 x))))))
(assert (forall ((x Int)) (= (fast x) (+ 1 (* 2 (+ 2 (* 2 (* (+ 1 2) (+ 1 (+ (divf x 2) x))))))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
