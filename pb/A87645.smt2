;; sequence(s): A87645
;; terms: 2 6 24 72 172 352 646 1094 1742 2642 3852 5436 7464 10012 13162 17002 21626 27134 33632 41232
;; small program: loop((((2 + y) * (y * y)) + x) + y, x, 2)
;; fast program: (((1 + ((2 + ((x + x) + x)) * (2 + x))) * ((2 + x) * x)) div (2 * (2 + (2 + 2)))) + 2
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (+ (* (+ 2 y) (* y y)) x) y))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (v0 x))))
(assert (forall ((x Int)) (= (fast x) (+ (divf (* (+ 1 (* (+ 2 (+ (+ x x) x)) (+ 2 x))) (* (+ 2 x) x)) (* 2 (+ 2 (+ 2 2)))) 2))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
