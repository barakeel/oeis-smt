;; sequence(s): A303916
;; terms: 0 0 12 84 324 924 2184 4536 8568 15048 24948 39468 60060 88452 126672 177072 242352 325584 430236 560196
;; small program: loop(((((y * y) * y) - y) * y) + x, x, 0)
;; fast program: (((1 + (x + x)) * ((2 + x) * (((x * x) * x) - x))) div (1 + (2 + 2))) div 2
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (* (- (* (* y y) y) y) y) x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 0))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (v0 x))))
(assert (forall ((x Int)) (= (fast x) (divf (divf (* (+ 1 (+ x x)) (* (+ 2 x) (- (* (* x x) x) x))) (+ 1 (+ 2 2))) 2))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
