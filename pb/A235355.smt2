;; sequence(s): A235355
;; terms: 0 1 2 7 11 24 33 58 74 115 140 201 237 322 371 484 548 693 774 955
;; small program: ((x - (x div 2)) * loop(x + y, x, 1)) div 2
;; fast program: ((1 + ((x - (x div 2)) * x)) * (1 + x)) div (2 + 2)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ x y))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (divf (* (- x (divf x 2)) (v0 x)) 2))))
(assert (forall ((x Int)) (= (fast x) (divf (* (+ 1 (* (- x (divf x 2)) x)) (+ 1 x)) (+ 2 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
