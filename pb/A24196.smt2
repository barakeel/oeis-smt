;; sequence(s): A24196
;; terms: 3 23 86 230 505 973 1708 2796 4335 6435 9218 12818 17381 23065 30040 38488 48603 60591 74670 91070
;; small program: loop(((1 + (y + y)) * (y * y)) + x, 1 + x, 0)
;; fast program: ((((2 + ((x + x) + x)) * ((2 + x) * (2 + x))) + 1) * (2 + x)) div ((1 + 2) * 2)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (* (+ 1 (+ y y)) (* y y)) x))))
(assert (forall ((x Int)) (= (g0 x) (+ 1 x))))
(assert (= h0 0))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (v0 x))))
(assert (forall ((x Int)) (= (fast x) (divf (* (+ (* (+ 2 (+ (+ x x) x)) (* (+ 2 x) (+ 2 x))) 1) (+ 2 x)) (* (+ 1 2) 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
