;; sequence(s): A78618
;; terms: 1 4 12 25 45 73 112 162 225 302 396 507 637 787 960 1156 1377 1624 1900 2205
;; small program: 1 + ((loop(x + y, 2 + x, 1) * x) div 2)
;; fast program: ((1 + x) * ((2 + x) * (2 + x))) div (2 + 2)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ x y))))
(assert (forall ((x Int)) (= (g0 x) (+ 2 x))))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ 1 (divf (* (v0 x) x) 2)))))
(assert (forall ((x Int)) (= (fast x) (divf (* (+ 1 x) (* (+ 2 x) (+ 2 x))) (+ 2 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
