;; sequence(s): A143941
;; terms: 3 14 37 76 135 218 329 472 651 870 1133 1444 1807 2226 2705 3248 3859 4542 5301 6140
;; small program: loop(((1 + (2 + y)) * (2 + x)) div y, x, 1) + 2
;; fast program: ((1 + (2 * (((2 + x) * (2 + x)) + x))) * (1 + x)) div (1 + 2)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (divf (* (+ 1 (+ 2 y)) (+ 2 x)) y))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ (v0 x) 2))))
(assert (forall ((x Int)) (= (fast x) (divf (* (+ 1 (* 2 (+ (* (+ 2 x) (+ 2 x)) x))) (+ 1 x)) (+ 1 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
