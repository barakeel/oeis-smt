;; sequence(s): A157476
;; terms: 2177 8449 18817 33281 51841 74497 101249 132097 167041 206081 249217 296449 347777 403201 462721 526337 594049 665857 741761 821761
;; small program: (loop2((x + y) * (2 * (2 * ((2 + 2) * x))), x, 2, 1, x) div 2) + 1
;; fast program: 1 + (2 * loop((2 + x) * x, 1, 2 * (2 * (2 * (2 * (2 + (x + x)))))))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun i0 () Int)
(declare-fun j0 (Int) Int)
(declare-fun u0 (Int Int Int) Int)
(declare-fun v0 (Int Int Int) Int)
(declare-fun w0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun f1 (Int) Int)
(declare-fun g1 () Int)
(declare-fun h1 (Int) Int)
(declare-fun u1 (Int Int) Int)
(declare-fun v1 (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (* (+ x y) (* 2 (* 2 (* (+ 2 2) x)))))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 2))
(assert (= i0 1))
(assert (forall ((x Int)) (= (j0 x) x)))
(assert (forall ((x Int) (y Int) (z Int)) (= (u0 x y z) (ite (<= x 0) y (f0 (u0 (- x 1) y z) (v0 (- x 1) y z))))))
(assert (forall ((x Int) (y Int) (z Int)) (= (v0 x y z) (ite (<= x 0) z (g0 (u0 (- x 1) y z))))))
(assert (forall ((x Int)) (= (w0 x) (u0 h0 i0 (j0 x)))))
(assert (forall ((x Int)) (= (small x) (+ (divf (w0 x) 2) 1))))
(assert (forall ((x Int)) (= (f1 x) (* (+ 2 x) x))))
(assert (= g1 1))
(assert (forall ((x Int)) (= (h1 x) (* 2 (* 2 (* 2 (* 2 (+ 2 (+ x x)))))))))
(assert (forall ((x Int) (y Int)) (= (u1 x y) (ite (<= x 0) y (f1 (u1 (- x 1) y))))))
(assert (forall ((x Int)) (= (v1 x) (u1 g1 (h1 x)))))
(assert (forall ((x Int)) (= (fast x) (+ 1 (* 2 (v1 x))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
