;; sequence(s): A27916
;; terms: 2 5 8 13 19 25 33 42 51 62 74 86 100 115 130 147 165 183 203 224
;; small program: ((1 - x) div (1 + 2)) + loop(x + (2 + y), x, 2)
;; fast program: ((1 + ((1 + 2) * (2 + x))) * (2 + x)) div (2 + (2 + 2))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ x (+ 2 y)))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ (divf (- 1 x) (+ 1 2)) (v0 x)))))
(assert (forall ((x Int)) (= (fast x) (divf (* (+ 1 (* (+ 1 2) (+ 2 x))) (+ 2 x)) (+ 2 (+ 2 2))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
