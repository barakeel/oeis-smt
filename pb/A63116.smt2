;; sequence(s): A63116
;; terms: 3 18 34 50 66 82 98 114 130 146 162 178 194 210 226 242 258 274 290 306
;; small program: 2 + (if x <= 0 then 1 else (loop(x * x, 2, 2) * x))
;; fast program: 2 + (if x <= 0 then 1 else (2 * (2 * (2 * (x + x)))))
(set-logic UFNIA)
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 () Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (* x x))))
(assert (= g0 2))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (= v0 (u0 g0 h0)))
(assert (forall ((x Int)) (= (small x) (+ 2 (ite (<= x 0) 1 (* v0 x))))))
(assert (forall ((x Int)) (= (fast x) (+ 2 (ite (<= x 0) 1 (* 2 (* 2 (* 2 (+ x x)))))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
