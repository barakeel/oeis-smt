;; sequence(s): A63491
;; terms: 1 12 50 133 279 506 832 1275 1853 2584 3486 4577 5875 7398 9164 11191 13497 16100 19018 22269
;; small program: (1 + (x + x)) * loop(((x + y) + y) + y, x, 1)
;; fast program: (1 + (x + x)) * (1 + ((1 + 2) * (((x * x) + x) div 2)))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (+ (+ x y) y) y))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (* (+ 1 (+ x x)) (v0 x)))))
(assert (forall ((x Int)) (= (fast x) (* (+ 1 (+ x x)) (+ 1 (* (+ 1 2) (divf (+ (* x x) x) 2)))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
