;; sequence(s): A48840-A116729
;; terms: 1 2 5 12 22 34 48 64 82 102 124 148 174 202 232 264 298 334 372 412
;; small program: (x * x) + loop((y + y) + y, x - 2, 1)
;; fast program: (if (x - 2) <= 0 then 1 else ((x - 2) * (1 + 2))) + (x * x)
(set-logic UFNIA)
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (+ y y) y))))
(assert (forall ((x Int)) (= (g0 x) (- x 2))))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ (* x x) (v0 x)))))
(assert (forall ((x Int)) (= (fast x) (+ (ite (<= (- x 2) 0) 1 (* (- x 2) (+ 1 2))) (* x x)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
