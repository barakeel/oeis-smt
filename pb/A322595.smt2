;; sequence(s): A322595
;; terms: 3 11 21 35 55 83 121 171 235 315 413 531 671 835 1025 1243 1491 1771 2085 2435
;; small program: loop((((y * y) + x) - y) + ((2 * 2) * 2), x, 1) + 2
;; fast program: (1 + (2 + (2 * (2 * (x + x))))) + ((((x * x) * x) - x) div (1 + 2))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (- (+ (* y y) x) y) (* (* 2 2) 2)))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ (v0 x) 2))))
(assert (forall ((x Int)) (= (fast x) (+ (+ 1 (+ 2 (* 2 (* 2 (+ x x))))) (divf (- (* (* x x) x) x) (+ 1 2))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
