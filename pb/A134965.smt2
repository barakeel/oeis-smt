;; sequence(s): A134965
;; terms: 3 12 19 28 35 44 51 60 67 76 83 92 99 108 115 124 131 140 147 156
;; small program: (x mod 2) + loop(1 + (x + x), 2, x + x)
;; fast program: 1 + (2 + ((2 * (2 * (x + x))) + (x mod 2)))
(set-logic UFNIA)
(define-fun modf ((a Int) (b Int)) Int (ite (< 0 b) (mod a b) (- (mod (- a) (- b)))))
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (+ 1 (+ x x)))))
(assert (= g0 2))
(assert (forall ((x Int)) (= (h0 x) (+ x x))))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (+ (modf x 2) (v0 x)))))
(assert (forall ((x Int)) (= (fast x) (+ 1 (+ 2 (+ (* 2 (* 2 (+ x x))) (modf x 2)))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
