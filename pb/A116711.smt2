;; sequence(s): A116711
;; terms: 1 2 5 12 23 36 51 68 87 108 131 156 183 212 243 276 311 348 387 428
;; small program: ((2 * loop(y + y, x - 2, 1)) - 1) + (x * x)
;; fast program: (if ((1 - x) * ((2 - x) * x)) <= 0 then 1 else ((2 * (2 * (x - 2))) - 1)) + (x * x)
(set-logic UFNIA)
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ y y))))
(assert (forall ((x Int)) (= (g0 x) (- x 2))))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ (- (* 2 (v0 x)) 1) (* x x)))))
(assert (forall ((x Int)) (= (fast x) (+ (ite (<= (* (- 1 x) (* (- 2 x) x)) 0) 1 (- (* 2 (* 2 (- x 2))) 1)) (* x x)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
