;; sequence(s): A86822
;; terms: 6 8 10 13 16 19 22 25 28 31 34 37 40 43 46 49 52 55 58 61
;; small program: (2 * (2 + x)) + (if (2 - x) <= 0 then x else 2)
;; fast program: (2 * (2 + x)) + loop(2, 2 - x, x)
(set-logic UFNIA)
(declare-fun small (Int) Int)
(declare-fun f0 () Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (small x) (+ (* 2 (+ 2 x)) (ite (<= (- 2 x) 0) x 2)))))
(assert (= f0 2))
(assert (forall ((x Int)) (= (g0 x) (- 2 x))))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y f0))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (fast x) (+ (* 2 (+ 2 x)) (v0 x)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
