;; sequence(s): A31767
;; terms: 7923 31688 71295 126744 198035 285168 388143 506960 641619 792120 958463 1140648 1338675 1552544 1782255 2027808 2289203 2566440 2859519 3168440
;; small program: (1 + x) * (loop(loop(1 + (x * y), 2 + 2, 2) * x, 2, 1 + x) + 2)
;; fast program: (((loop((x - y) * x, 2, 2 + (2 * (2 + 2))) + 1) * (1 + x)) + 2) * (1 + x)
(set-logic UFNIA)
(declare-fun f1 (Int Int) Int)
(declare-fun g1 () Int)
(declare-fun h1 () Int)
(declare-fun u1 (Int Int) Int)
(declare-fun v1 () Int)
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun f2 (Int Int) Int)
(declare-fun g2 () Int)
(declare-fun h2 () Int)
(declare-fun u2 (Int Int) Int)
(declare-fun v2 () Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f1 x y) (+ 1 (* x y)))))
(assert (= g1 (+ 2 2)))
(assert (= h1 2))
(assert (forall ((x Int) (y Int)) (= (u1 x y) (ite (<= x 0) y (f1 (u1 (- x 1) y) x)))))
(assert (= v1 (u1 g1 h1)))
(assert (forall ((x Int)) (= (f0 x) (* v1 x))))
(assert (= g0 2))
(assert (forall ((x Int)) (= (h0 x) (+ 1 x))))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (* (+ 1 x) (+ (v0 x) 2)))))
(assert (forall ((x Int) (y Int)) (= (f2 x y) (* (- x y) x))))
(assert (= g2 2))
(assert (= h2 (+ 2 (* 2 (+ 2 2)))))
(assert (forall ((x Int) (y Int)) (= (u2 x y) (ite (<= x 0) y (f2 (u2 (- x 1) y) x)))))
(assert (= v2 (u2 g2 h2)))
(assert (forall ((x Int)) (= (fast x) (* (+ (* (+ v2 1) (+ 1 x)) 2) (+ 1 x)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
