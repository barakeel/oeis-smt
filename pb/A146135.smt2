;; sequence(s): A146135
;; terms: 1 5 9 13 65 69 73 77 129 133 137 141 193 197 201 205
;; small program: ((loop((x - (x mod (2 + 2))) + x, 2, x) * 2) * 2) + 1
;; fast program: 1 + (2 * (2 * (((1 + 2) * (x - (x mod (2 + 2)))) + x)))
(set-logic UFNIA)
(define-fun modf ((a Int) (b Int)) Int (ite (< 0 b) (mod a b) (- (mod (- a) (- b)))))
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (+ (- x (modf x (+ 2 2))) x))))
(assert (= g0 2))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (+ (* (* (v0 x) 2) 2) 1))))
(assert (forall ((x Int)) (= (fast x) (+ 1 (* 2 (* 2 (+ (* (+ 1 2) (- x (modf x (+ 2 2)))) x)))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
