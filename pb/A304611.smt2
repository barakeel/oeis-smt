;; sequence(s): A304611
;; terms: 117 272 427 582 737 892 1047 1202 1357 1512 1667 1822 1977 2132 2287 2442 2597 2752 2907 3062
;; small program: ((1 + loop(2 + (x * x), 2, 2)) * loop(1 + (x + x), 2, x)) - x
;; fast program: ((1 + (2 + (2 * (x + x)))) * ((2 * (2 * (2 + (2 * (2 + 2))))) - 1)) - x
(set-logic UFNIA)
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 () Int)
(declare-fun f1 (Int) Int)
(declare-fun g1 () Int)
(declare-fun h1 (Int) Int)
(declare-fun u1 (Int Int) Int)
(declare-fun v1 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (+ 2 (* x x)))))
(assert (= g0 2))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (= v0 (u0 g0 h0)))
(assert (forall ((x Int)) (= (f1 x) (+ 1 (+ x x)))))
(assert (= g1 2))
(assert (forall ((x Int)) (= (h1 x) x)))
(assert (forall ((x Int) (y Int)) (= (u1 x y) (ite (<= x 0) y (f1 (u1 (- x 1) y))))))
(assert (forall ((x Int)) (= (v1 x) (u1 g1 (h1 x)))))
(assert (forall ((x Int)) (= (small x) (- (* (+ 1 v0) (v1 x)) x))))
(assert (forall ((x Int)) (= (fast x) (- (* (+ 1 (+ 2 (* 2 (+ x x)))) (- (* 2 (* 2 (+ 2 (* 2 (+ 2 2))))) 1)) x))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
