;; sequence(s): A126335
;; terms: 3 23 72 162 305 513 798 1172 1647 2235 2948 3798 4797 5957 7290 8808 10523 12447 14592 16970
;; small program: ((1 + (2 * ((2 + x) * x))) * (2 + x)) + loop(x + y, x, 1)
;; fast program: ((((1 + (2 * (x + x))) * ((2 + x) * (2 + x))) - x) div 2) + 1
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ x y))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ (* (+ 1 (* 2 (* (+ 2 x) x))) (+ 2 x)) (v0 x)))))
(assert (forall ((x Int)) (= (fast x) (+ (divf (- (* (+ 1 (* 2 (+ x x))) (* (+ 2 x) (+ 2 x))) x) 2) 1))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
