;; sequence(s): A7899
;; terms: 1 12 44 96 170 264 380 516 674 852 1052 1272 1514 1776 2060 2364 2690 3036 3404 3792
;; small program: (((1 + loop(2 * (2 + x), 2, 2)) * (x * x)) div 2) + (if x <= 0 then 1 else 2)
;; fast program: ((2 * ((1 + (2 + 2)) * (x * x))) + ((x * x) div 2)) + (if x <= 0 then 1 else 2)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 () Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (* 2 (+ 2 x)))))
(assert (= g0 2))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (= v0 (u0 g0 h0)))
(assert (forall ((x Int)) (= (small x) (+ (divf (* (+ 1 v0) (* x x)) 2) (ite (<= x 0) 1 2)))))
(assert (forall ((x Int)) (= (fast x) (+ (+ (* 2 (* (+ 1 (+ 2 2)) (* x x))) (divf (* x x) 2)) (ite (<= x 0) 1 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
