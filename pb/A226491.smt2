;; sequence(s): A226491
;; terms: 0 2 25 69 134 220 327 455 604 774 965 1177 1410 1664 1939 2235 2552 2890 3249 3629
;; small program: (loop(((1 + y) * ((x * y) - 1)) + x, 2, x) * x) div 2
;; fast program: (2 * (((2 * ((x - 2) + x)) + x) * x)) + (((x * x) - x) div 2)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (* (+ 1 y) (- (* x y) 1)) x))))
(assert (= g0 2))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (divf (* (v0 x) x) 2))))
(assert (forall ((x Int)) (= (fast x) (+ (* 2 (* (+ (* 2 (+ (- x 2) x)) x) x)) (divf (- (* x x) x) 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
