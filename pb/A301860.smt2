;; sequence(s): A301860
;; terms: 10 12 12 14 16
;; small program: 2 + (2 * (2 + ((if (2 - x) <= 0 then 1 else 2) + x)))
;; fast program: 2 * (2 + (loop(1 + 2, 2 - x, 2) + x))
(set-logic UFNIA)
(declare-fun small (Int) Int)
(declare-fun f0 () Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (small x) (+ 2 (* 2 (+ 2 (+ (ite (<= (- 2 x) 0) 1 2) x)))))))
(assert (= f0 (+ 1 2)))
(assert (forall ((x Int)) (= (g0 x) (- 2 x))))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y f0))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (fast x) (* 2 (+ 2 (+ (v0 x) x))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
