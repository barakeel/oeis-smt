;; sequence(s): A163655
;; terms: 0 10 31 69 130 220 345 511 724 990 1315 1705 2166 2704 3325 4035 4840 5746 6759 7885
;; small program: ((1 + 2) * (loop((y * y) + x, x, x) + x)) + (x * x)
;; fast program: ((2 + (2 + (2 + ((2 + x) * x)))) * x) + (((x * x) + x) div 2)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (* y y) x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (small x) (+ (* (+ 1 2) (+ (v0 x) x)) (* x x)))))
(assert (forall ((x Int)) (= (fast x) (+ (* (+ 2 (+ 2 (+ 2 (* (+ 2 x) x)))) x) (divf (+ (* x x) x) 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
