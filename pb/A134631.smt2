;; sequence(s): A134631
;; terms: 0 4 144 1152 4960 15300 38304 83104 162432 293220 497200 801504 1239264 1850212 2681280 3787200 5231104 7085124 9430992 12360640
;; small program: (((loop2(y - x, x, 2 + 2, x * x, 1) * x) + 2) * x) * x
;; fast program: (2 + ((1 + (2 + 2)) * ((x * x) - x))) * (((x * x) + x) * x)
(set-logic UFNIA)
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun i0 (Int) Int)
(declare-fun j0 () Int)
(declare-fun u0 (Int Int Int) Int)
(declare-fun v0 (Int Int Int) Int)
(declare-fun w0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (- y x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 (+ 2 2)))
(assert (forall ((x Int)) (= (i0 x) (* x x))))
(assert (= j0 1))
(assert (forall ((x Int) (y Int) (z Int)) (= (u0 x y z) (ite (<= x 0) y (f0 (u0 (- x 1) y z) (v0 (- x 1) y z))))))
(assert (forall ((x Int) (y Int) (z Int)) (= (v0 x y z) (ite (<= x 0) z (g0 (u0 (- x 1) y z))))))
(assert (forall ((x Int)) (= (w0 x) (u0 h0 (i0 x) j0))))
(assert (forall ((x Int)) (= (small x) (* (* (+ (* (w0 x) x) 2) x) x))))
(assert (forall ((x Int)) (= (fast x) (* (+ 2 (* (+ 1 (+ 2 2)) (- (* x x) x))) (* (+ (* x x) x) x)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
