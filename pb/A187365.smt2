;; sequence(s): A187365
;; terms: 1 42 2145 117572 6686100 388934370 22974421470 1372238454600 82653088824684 5011211083256840 305437356823765089 18697712969443807572 1148770108115543559100 70797430141465286938140 4374750896947475198160300 270950190057528375091435920
;; small program: (loop(2 * ((x - (x div y)) + x), 2 + ((x + x) + x), 1) div 2) div (1 + 2)
;; fast program: loop((((1 + (y + y)) * 2) * x) div (2 + y), (x + x) + x, 1) * (1 + (x + x))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun f1 (Int Int) Int)
(declare-fun g1 (Int) Int)
(declare-fun h1 () Int)
(declare-fun u1 (Int Int) Int)
(declare-fun v1 (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (* 2 (+ (- x (divf x y)) x)))))
(assert (forall ((x Int)) (= (g0 x) (+ 2 (+ (+ x x) x)))))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (divf (divf (v0 x) 2) (+ 1 2)))))
(assert (forall ((x Int) (y Int)) (= (f1 x y) (divf (* (* (+ 1 (+ y y)) 2) x) (+ 2 y)))))
(assert (forall ((x Int)) (= (g1 x) (+ (+ x x) x))))
(assert (= h1 1))
(assert (forall ((x Int) (y Int)) (= (u1 x y) (ite (<= x 0) y (f1 (u1 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v1 x) (u1 (g1 x) h1))))
(assert (forall ((x Int)) (= (fast x) (* (v1 x) (+ 1 (+ x x))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
