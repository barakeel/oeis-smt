;; sequence(s): A128464
;; terms: 11 17 29 41 47 59 71 77 89 101 107 119 131 137 149 161 167 179 191 197
;; small program: loop((((((x + x) div (y + 2)) + x) * 2) + 1) + 2, 2, x)
;; fast program: (2 * ((1 + 2) * (2 + (((x + x) div (1 + 2)) + x)))) - 1
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (+ (* (+ (divf (+ x x) (+ y 2)) x) 2) 1) 2))))
(assert (= g0 2))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (v0 x))))
(assert (forall ((x Int)) (= (fast x) (- (* 2 (* (+ 1 2) (+ 2 (+ (divf (+ x x) (+ 1 2)) x)))) 1))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
