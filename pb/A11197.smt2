;; sequence(s): A11197
;; terms: 0 20 315 1820 6630 18480 43225 89320 168300 295260 489335 774180 1178450 1736280 2487765 3479440 4764760 6404580 8467635 11031020
;; small program: ((loop((y * y) + x, x + x, 0) * (1 + ((x + x) + x))) div 2) * (1 + x)
;; fast program: ((((1 + (x + x)) * ((x * x) + x)) div (2 + (2 + 2))) * (1 + ((x + x) + x))) * (1 + (2 * (x + x)))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (* y y) x))))
(assert (forall ((x Int)) (= (g0 x) (+ x x))))
(assert (= h0 0))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (* (divf (* (v0 x) (+ 1 (+ (+ x x) x))) 2) (+ 1 x)))))
(assert (forall ((x Int)) (= (fast x) (* (* (divf (* (+ 1 (+ x x)) (+ (* x x) x)) (+ 2 (+ 2 2))) (+ 1 (+ (+ x x) x))) (+ 1 (* 2 (+ x x)))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
