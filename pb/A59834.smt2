;; sequence(s): A59834
;; terms: 0 6 18 40 76 130 206 308 440 606 810 1056 1348 1690 2086 2540 3056 3638 4290 5016
;; small program: 2 * (loop((y * y) + x, x, x) + x)
;; fast program: ((2 * (((2 + (x * x)) * x) div (1 + 2))) + ((2 + x) * x)) + x
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (* y y) x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (small x) (* 2 (+ (v0 x) x)))))
(assert (forall ((x Int)) (= (fast x) (+ (+ (* 2 (divf (* (+ 2 (* x x)) x) (+ 1 2))) (* (+ 2 x) x)) x))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
