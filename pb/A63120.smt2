;; sequence(s): A63120
;; terms: 5 18 32 46 60 74 88 102 116 130 144 158 172 186 200 214 228 242 256 270
;; small program: 2 + (2 + (if x <= 0 then 1 else (x * loop(2 + (x + x), 2, 2))))
;; fast program: 2 + (2 + (if x <= 0 then 1 else (2 * ((2 * ((x + x) + x)) + x))))
(set-logic UFNIA)
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 () Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (+ 2 (+ x x)))))
(assert (= g0 2))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (= v0 (u0 g0 h0)))
(assert (forall ((x Int)) (= (small x) (+ 2 (+ 2 (ite (<= x 0) 1 (* x v0)))))))
(assert (forall ((x Int)) (= (fast x) (+ 2 (+ 2 (ite (<= x 0) 1 (* 2 (+ (* 2 (+ (+ x x) x)) x))))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
