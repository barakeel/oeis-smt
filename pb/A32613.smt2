;; sequence(s): A32613
;; terms: 19 210 311 412 513 614 715 816 917 1018 1119 1220 1321 1422 1523 1624 1725 1826 1927 2028
;; small program: (loop((if x <= 0 then 1 else (2 + (2 * (2 + 2)))) * (1 + x), 2, x) - 1) + x
;; fast program: ((1 + (2 * ((1 + (2 + 2)) * (if x <= 0 then 1 else (2 + (2 * (2 + 2))))))) * (1 + x)) + (2 * (2 + 2))
(set-logic UFNIA)
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (* (ite (<= x 0) 1 (+ 2 (* 2 (+ 2 2)))) (+ 1 x)))))
(assert (= g0 2))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (+ (- (v0 x) 1) x))))
(assert (forall ((x Int)) (= (fast x) (+ (* (+ 1 (* 2 (* (+ 1 (+ 2 2)) (ite (<= x 0) 1 (+ 2 (* 2 (+ 2 2))))))) (+ 1 x)) (* 2 (+ 2 2))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
