;; sequence(s): A186544
;; terms: 8 16 24 32 40 48 56 64 72 80 88 96 104 112 120 129 137 145 153 161
;; small program: (2 * (2 * (2 + (x + x)))) + ((1 + x) div loop(x * x, 2, 2))
;; fast program: (2 * (2 * (2 + (x + x)))) + ((1 + x) div (2 * (2 * (2 + 2))))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 () Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (* x x))))
(assert (= g0 2))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (= v0 (u0 g0 h0)))
(assert (forall ((x Int)) (= (small x) (+ (* 2 (* 2 (+ 2 (+ x x)))) (divf (+ 1 x) v0)))))
(assert (forall ((x Int)) (= (fast x) (+ (* 2 (* 2 (+ 2 (+ x x)))) (divf (+ 1 x) (* 2 (* 2 (+ 2 2))))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
