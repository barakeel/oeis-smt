;; sequence(s): A172323
;; terms: 0 3 7 10 14 18 21 25 29 32 36 40 43 47 51 54 58 62 65 69
;; small program: (((((((x div 2) + x) div (1 + (2 + 2))) + x) div 2) + x) + x) + x
;; fast program: ((2 * (loop(x * x, 1, 2 + (2 + 2)) * x)) + x) div (2 * (2 + (2 * (2 + 2))))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun small (Int) Int)
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 () Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (small x) (+ (+ (+ (divf (+ (divf (+ (divf x 2) x) (+ 1 (+ 2 2))) x) 2) x) x) x))))
(assert (forall ((x Int)) (= (f0 x) (* x x))))
(assert (= g0 1))
(assert (= h0 (+ 2 (+ 2 2))))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (= v0 (u0 g0 h0)))
(assert (forall ((x Int)) (= (fast x) (divf (+ (* 2 (* v0 x)) x) (* 2 (+ 2 (* 2 (+ 2 2))))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
