;; sequence(s): A256328
;; terms: 0 2 15 47 108 206 351 551 816 1154 1575 2087 2700 3422 4263 5231 6336 7586 8991 10559
;; small program: loop(((y * y) * y) - x, x, 0) + ((x * x) * x)
;; fast program: ((1 + 2) * ((1 + (x + x)) * (x * x))) div (2 + 2)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (- (* (* y y) y) x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 0))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ (v0 x) (* (* x x) x)))))
(assert (forall ((x Int)) (= (fast x) (divf (* (+ 1 2) (* (+ 1 (+ x x)) (* x x))) (+ 2 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
