;; sequence(s): A71246
;; terms: 0 0 4 23 76 190 400 749 1288 2076 3180 4675 6644 9178 12376 16345 21200 27064 34068 42351
;; small program: ((loop((y * y) + x, x, x) * (x - 2)) + x) + x
;; fast program: ((2 + ((2 * (x * x)) + x)) * ((x * x) - x)) div (2 + (2 + 2))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (* y y) x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (small x) (+ (+ (* (v0 x) (- x 2)) x) x))))
(assert (forall ((x Int)) (= (fast x) (divf (* (+ 2 (+ (* 2 (* x x)) x)) (- (* x x) x)) (+ 2 (+ 2 2))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
