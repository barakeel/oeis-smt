;; sequence(s): A135403
;; terms: 1 111111 222221 333331 444441 555551 666661 777771 888881 999991 1111101 1222211 1333321 1444431 1555541 1666651 1777761 1888871 1999981 2111091
;; small program: ((loop(1 + (2 * ((2 * (x + x)) + x)), 1 + (2 + 2), 1) * x) - x) + 1
;; fast program: ((loop((1 + ((1 + (x * x)) * (x * x))) * (1 + x), 1, 2 + (2 * (2 + 2))) * x) - x) + 1
(set-logic UFNIA)
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 () Int)
(declare-fun small (Int) Int)
(declare-fun f1 (Int) Int)
(declare-fun g1 () Int)
(declare-fun h1 () Int)
(declare-fun u1 (Int Int) Int)
(declare-fun v1 () Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (+ 1 (* 2 (+ (* 2 (+ x x)) x))))))
(assert (= g0 (+ 1 (+ 2 2))))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (= v0 (u0 g0 h0)))
(assert (forall ((x Int)) (= (small x) (+ (- (* v0 x) x) 1))))
(assert (forall ((x Int)) (= (f1 x) (* (+ 1 (* (+ 1 (* x x)) (* x x))) (+ 1 x)))))
(assert (= g1 1))
(assert (= h1 (+ 2 (* 2 (+ 2 2)))))
(assert (forall ((x Int) (y Int)) (= (u1 x y) (ite (<= x 0) y (f1 (u1 (- x 1) y))))))
(assert (= v1 (u1 g1 h1)))
(assert (forall ((x Int)) (= (fast x) (+ (- (* v1 x) x) 1))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
