;; sequence(s): A2458
;; terms: 1 10 126 1716 24310 352716 5200300 77558760 1166803110 17672631900 269128937220 4116715363800 63205303218876 973469712824056 15033633249770520 232714176627630544 3609714217008132870 56093138908331422716 873065282167813104916
;; small program: loop(2 * ((x - (x div (1 + y))) + x), x + x, 2) div 2
;; fast program: loop((((1 + (y + y)) * 2) * x) div (2 + y), (x - 1) + x, 1) * (1 + (2 * (x + x)))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun f1 (Int Int) Int)
(declare-fun g1 (Int) Int)
(declare-fun h1 () Int)
(declare-fun u1 (Int Int) Int)
(declare-fun v1 (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (* 2 (+ (- x (divf x (+ 1 y))) x)))))
(assert (forall ((x Int)) (= (g0 x) (+ x x))))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (divf (v0 x) 2))))
(assert (forall ((x Int) (y Int)) (= (f1 x y) (divf (* (* (+ 1 (+ y y)) 2) x) (+ 2 y)))))
(assert (forall ((x Int)) (= (g1 x) (+ (- x 1) x))))
(assert (= h1 1))
(assert (forall ((x Int) (y Int)) (= (u1 x y) (ite (<= x 0) y (f1 (u1 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v1 x) (u1 (g1 x) h1))))
(assert (forall ((x Int)) (= (fast x) (* (v1 x) (+ 1 (* 2 (+ x x)))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
