;; sequence(s): A154549
;; terms: 111111 222222 333333 444444 555555 666666 777777 888888 999999 1111110 1222221 1333332 1444443 1555554 1666665 1777776 1888887 1999998 2111109 2222220
;; small program: loop(1 + (2 * ((2 * (x + x)) + x)), 1 + (2 + 2), 1) * (1 + x)
;; fast program: loop((1 + ((x * x) + x)) * (1 + ((x * x) * x)), 1, 2 + (2 * (2 + 2))) * (1 + x)
(set-logic UFNIA)
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 () Int)
(declare-fun small (Int) Int)
(declare-fun f1 (Int) Int)
(declare-fun g1 () Int)
(declare-fun h1 () Int)
(declare-fun u1 (Int Int) Int)
(declare-fun v1 () Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (+ 1 (* 2 (+ (* 2 (+ x x)) x))))))
(assert (= g0 (+ 1 (+ 2 2))))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (= v0 (u0 g0 h0)))
(assert (forall ((x Int)) (= (small x) (* v0 (+ 1 x)))))
(assert (forall ((x Int)) (= (f1 x) (* (+ 1 (+ (* x x) x)) (+ 1 (* (* x x) x))))))
(assert (= g1 1))
(assert (= h1 (+ 2 (* 2 (+ 2 2)))))
(assert (forall ((x Int) (y Int)) (= (u1 x y) (ite (<= x 0) y (f1 (u1 (- x 1) y))))))
(assert (= v1 (u1 g1 h1)))
(assert (forall ((x Int)) (= (fast x) (* v1 (+ 1 x)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
