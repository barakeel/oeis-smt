;; sequence(s): A58919
;; terms: 1 1 5 25 85 221 481 925 1625 2665 4141 6161 8845 12325 16745 22261 29041 37265 47125 58825
;; small program: 1 - (loop((y - x) * x, 2, x) div 2)
;; fast program: ((1 + (x * x)) * (2 + ((x - 2) * x))) div 2
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (* (- y x) x))))
(assert (= g0 2))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (- 1 (divf (v0 x) 2)))))
(assert (forall ((x Int)) (= (fast x) (divf (* (+ 1 (* x x)) (+ 2 (* (- x 2) x))) 2))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
