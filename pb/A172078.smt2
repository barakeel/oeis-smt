;; sequence(s): A172078
;; terms: 0 1 19 70 170 335 581 924 1380 1965 2695 3586 4654 5915 7385 9080 11016 13209 15675 18430
;; small program: loop(((((y - 2) + y) * (2 * (y + y))) + x) + y, x, 0)
;; fast program: (((1 + x) * ((2 * (2 * (x * x))) - x)) div (2 + (2 + 2))) + (2 * (((x * x) * x) - x))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (+ (* (+ (- y 2) y) (* 2 (+ y y))) x) y))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 0))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (v0 x))))
(assert (forall ((x Int)) (= (fast x) (+ (divf (* (+ 1 x) (- (* 2 (* 2 (* x x))) x)) (+ 2 (+ 2 2))) (* 2 (- (* (* x x) x) x))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
