;; sequence(s): A210982
;; terms: 0 1 8 12 26 33 54 64 92 105 140 156 198 217 266 288 344 369 432 460
;; small program: ((2 + loop(y - x, x, 1)) * (x div 2)) + (x * x)
;; fast program: ((1 + (((x - (x div 2)) + x) + x)) * (x div 2)) + x
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (- y x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ (* (+ 2 (v0 x)) (divf x 2)) (* x x)))))
(assert (forall ((x Int)) (= (fast x) (+ (* (+ 1 (+ (+ (- x (divf x 2)) x) x)) (divf x 2)) x))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
