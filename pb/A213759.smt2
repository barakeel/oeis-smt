;; sequence(s): A213759
;; terms: 1 4 11 22 39 62 93 132 181 240 311 394 491 602 729 872 1033 1212 1411 1630
;; small program: loop((((y * y) - 2) div 2) + x, 2 + x, 1)
;; fast program: (((((2 * (x * x)) - x) * (2 + x)) div (2 * (2 + (2 + 2)))) + 1) + ((2 + x) * x)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (divf (- (* y y) 2) 2) x))))
(assert (forall ((x Int)) (= (g0 x) (+ 2 x))))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (v0 x))))
(assert (forall ((x Int)) (= (fast x) (+ (+ (divf (* (- (* 2 (* x x)) x) (+ 2 x)) (* 2 (+ 2 (+ 2 2)))) 1) (* (+ 2 x) x)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
