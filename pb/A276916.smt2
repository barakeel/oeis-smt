;; sequence(s): A276916
;; terms: 1 5 41 61 145 181 313 365 545 613 841 925 1201 1301 1625 1741 2113 2245 2665 2813
;; small program: loop((2 * (y + y)) + x, (x - (x mod 2)) + x, 1)
;; fast program: 1 + (2 * (2 * ((2 * (2 * ((x div 2) * x))) + x)))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(define-fun modf ((a Int) (b Int)) Int (ite (< 0 b) (mod a b) (- (mod (- a) (- b)))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (* 2 (+ y y)) x))))
(assert (forall ((x Int)) (= (g0 x) (+ (- x (modf x 2)) x))))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (v0 x))))
(assert (forall ((x Int)) (= (fast x) (+ 1 (* 2 (* 2 (+ (* 2 (* 2 (* (divf x 2) x))) x)))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
