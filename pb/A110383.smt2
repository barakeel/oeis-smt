;; sequence(s): A110383
;; terms: 11 21 241 55681 3099816961 9608865160705105921 92330289676612360941221747472778199041 8524882391767151111154918892947398067446166736305624023874497267723631329281
;; small program: 1 + (2 * loop(2 * ((x - (2 + 2)) * x), x, 1 + (2 + 2)))
;; fast program: loop((x - (2 * (2 + 2))) * x, x, 2 + (2 * (2 + 2))) + 1
(set-logic UFNIA)
(declare-fun f0 (Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun f1 (Int) Int)
(declare-fun g1 (Int) Int)
(declare-fun h1 () Int)
(declare-fun u1 (Int Int) Int)
(declare-fun v1 (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (* 2 (* (- x (+ 2 2)) x)))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 (+ 1 (+ 2 2))))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ 1 (* 2 (v0 x))))))
(assert (forall ((x Int)) (= (f1 x) (* (- x (* 2 (+ 2 2))) x))))
(assert (forall ((x Int)) (= (g1 x) x)))
(assert (= h1 (+ 2 (* 2 (+ 2 2)))))
(assert (forall ((x Int) (y Int)) (= (u1 x y) (ite (<= x 0) y (f1 (u1 (- x 1) y))))))
(assert (forall ((x Int)) (= (v1 x) (u1 (g1 x) h1))))
(assert (forall ((x Int)) (= (fast x) (+ (v1 x) 1))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
