;; sequence(s): A139704-A139819-A288040
;; terms: 10 12 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31
;; small program: loop(x + y, 2 + 2, x) - ((0 - x) div (((2 + 2) * 2) + 2))
;; fast program: 2 + ((x - ((0 - x) div (2 + (2 * (2 + 2))))) + (2 * (2 + 2)))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ x y))))
(assert (= g0 (+ 2 2)))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (- (v0 x) (divf (- 0 x) (+ (* (+ 2 2) 2) 2))))))
(assert (forall ((x Int)) (= (fast x) (+ 2 (+ (- x (divf (- 0 x) (+ 2 (* 2 (+ 2 2))))) (* 2 (+ 2 2)))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
