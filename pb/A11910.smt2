;; sequence(s): A11910
;; terms: 0 0 0 0 0 2 4 7 12 18 25 35 47 61 78 97 120 145 174 207
;; small program: ((1 - x) * ((2 - x) * x)) div (1 + loop((x * x) + y, 2, 2))
;; fast program: ((1 - x) * ((2 - x) * x)) div (2 * (2 + (2 * (2 + (2 + 2)))))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 () Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (* x x) y))))
(assert (= g0 2))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (= v0 (u0 g0 h0)))
(assert (forall ((x Int)) (= (small x) (divf (* (- 1 x) (* (- 2 x) x)) (+ 1 v0)))))
(assert (forall ((x Int)) (= (fast x) (divf (* (- 1 x) (* (- 2 x) x)) (* 2 (+ 2 (* 2 (+ 2 (+ 2 2)))))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
