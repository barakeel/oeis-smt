;; sequence(s): A299198
;; terms: 2 1 0 5 26 77 176 345 610 1001 1552 2301 3290 4565 6176 8177 10626 13585 17120 21301
;; small program: loop(((y div (1 + 2)) - 1) + x, x * x, 2)
;; fast program: 2 + ((((((x * x) * x) - x) div (2 + (2 + 2))) - x) * x)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (- (divf y (+ 1 2)) 1) x))))
(assert (forall ((x Int)) (= (g0 x) (* x x))))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (v0 x))))
(assert (forall ((x Int)) (= (fast x) (+ 2 (* (- (divf (- (* (* x x) x) x) (+ 2 (+ 2 2))) x) x)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
