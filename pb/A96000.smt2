;; sequence(s): A96000
;; terms: 1 10 37 92 185 326 525 792 1137 1570 2101 2740 3497 4382 5405 6576 7905 9402 11077 12940
;; small program: loop((((1 + 2) * ((2 * (y * y)) + x)) div y) + x, x, 1)
;; fast program: ((1 + ((1 + x) * (2 + ((2 * (x + x)) + x)))) * (1 + x)) div (1 + 2)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (divf (* (+ 1 2) (+ (* 2 (* y y)) x)) y) x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (v0 x))))
(assert (forall ((x Int)) (= (fast x) (divf (* (+ 1 (* (+ 1 x) (+ 2 (+ (* 2 (+ x x)) x)))) (+ 1 x)) (+ 1 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
