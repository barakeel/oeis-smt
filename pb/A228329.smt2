;; sequence(s): A228329
;; terms: 1 8 98 1320 18590 268736 3952228 58837680 883941750 13373883600 203487733020 3110407163760 47726453450988 734694122886080 11341161925265480 175489379096245984 2721169178975361702 42273090191785999728 657788911222324942060 10250564041646388681200
;; small program: loop((2 * ((2 * (x * y)) - x)) div (1 + y), x + x, 1 + ((x + x) + x))
;; fast program: loop((((1 + (y + y)) * 2) * x) div (2 + y), (x - 1) + x, 1) * (1 + ((x + x) + x))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun f1 (Int Int) Int)
(declare-fun g1 (Int) Int)
(declare-fun h1 () Int)
(declare-fun u1 (Int Int) Int)
(declare-fun v1 (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (divf (* 2 (- (* 2 (* x y)) x)) (+ 1 y)))))
(assert (forall ((x Int)) (= (g0 x) (+ x x))))
(assert (forall ((x Int)) (= (h0 x) (+ 1 (+ (+ x x) x)))))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (small x) (v0 x))))
(assert (forall ((x Int) (y Int)) (= (f1 x y) (divf (* (* (+ 1 (+ y y)) 2) x) (+ 2 y)))))
(assert (forall ((x Int)) (= (g1 x) (+ (- x 1) x))))
(assert (= h1 1))
(assert (forall ((x Int) (y Int)) (= (u1 x y) (ite (<= x 0) y (f1 (u1 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v1 x) (u1 (g1 x) h1))))
(assert (forall ((x Int)) (= (fast x) (* (v1 x) (+ 1 (+ (+ x x) x))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
