;; sequence(s): A172076
;; terms: 0 1 17 62 150 295 511 812 1212 1725 2365 3146 4082 5187 6475 7960 9656 11577 13737 16150
;; small program: loop(((y * y) - 2) + x, x, 2 * ((x * x) * x))
;; fast program: (((1 + (x + x)) * ((x * x) + x)) div (2 + (2 + 2))) + (2 * (((x * x) * x) - x))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (- (* y y) 2) x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (forall ((x Int)) (= (h0 x) (* 2 (* (* x x) x)))))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (small x) (v0 x))))
(assert (forall ((x Int)) (= (fast x) (+ (divf (* (+ 1 (+ x x)) (+ (* x x) x)) (+ 2 (+ 2 2))) (* 2 (- (* (* x x) x) x))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
