;; sequence(s): A160805
;; terms: 4 6 13 27 50 84 131 193 272 370 489 631 798 992 1215 1469 1756 2078 2437 2835
;; small program: 2 + (2 + loop((y * y) + x, x, x * x))
;; fast program: (2 + (2 + (((1 + (x + x)) * ((x * x) + x)) div (2 + (2 + 2))))) + (x * x)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (* y y) x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (forall ((x Int)) (= (h0 x) (* x x))))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (small x) (+ 2 (+ 2 (v0 x))))))
(assert (forall ((x Int)) (= (fast x) (+ (+ 2 (+ 2 (divf (* (+ 1 (+ x x)) (+ (* x x) x)) (+ 2 (+ 2 2))))) (* x x)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
