;; sequence(s): A152759
;; terms: 0 3 27 72 138 225 333 462 612 783 975 1188 1422 1677 1953 2250 2568 2907 3267 3648
;; small program: loop(x + y, x, (1 + 2) * ((x * x) - x)) * (1 + 2)
;; fast program: (2 * (((2 * ((x - 2) + x)) + x) * x)) + (((x * x) + x) div 2)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ x y))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (forall ((x Int)) (= (h0 x) (* (+ 1 2) (- (* x x) x)))))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (small x) (* (v0 x) (+ 1 2)))))
(assert (forall ((x Int)) (= (fast x) (+ (* 2 (* (+ (* 2 (+ (- x 2) x)) x) x)) (divf (+ (* x x) x) 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
