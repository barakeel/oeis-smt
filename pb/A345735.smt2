;; sequence(s): A345735
;; terms: 17 17 23 29 41 53 71 89 113 137 167 197 233 269 311 353 401 449 503 557
;; small program: loop(((x * y) div 2) + 2, 2 + 2, x * x) - 1
;; fast program: 2 + ((1 + 2) * ((1 + (2 + 2)) + ((x * x) div 2)))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (divf (* x y) 2) 2))))
(assert (= g0 (+ 2 2)))
(assert (forall ((x Int)) (= (h0 x) (* x x))))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (- (v0 x) 1))))
(assert (forall ((x Int)) (= (fast x) (+ 2 (* (+ 1 2) (+ (+ 1 (+ 2 2)) (divf (* x x) 2)))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
