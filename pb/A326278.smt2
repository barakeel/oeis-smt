;; sequence(s): A326278
;; terms: 0 0 1 9 34 90 195 371 644 1044 1605 2365 3366 4654 6279 8295 10760 13736 17289 21489
;; small program: ((loop((x * x) - 2, 2, x) div (1 + 2)) + x) div 2
;; fast program: (((2 + (((x * x) - (2 + 2)) * x)) * x) + x) div (2 + (2 + 2))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (- (* x x) 2))))
(assert (= g0 2))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (divf (+ (divf (v0 x) (+ 1 2)) x) 2))))
(assert (forall ((x Int)) (= (fast x) (divf (+ (* (+ 2 (* (- (* x x) (+ 2 2)) x)) x) x) (+ 2 (+ 2 2))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
