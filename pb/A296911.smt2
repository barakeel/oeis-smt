;; sequence(s): A296911
;; terms: 1 5 11 25 39 61 83 113 143 181 219 265 311 365 419 481 543 613 683 761
;; small program: (2 * ((x * x) + x)) + loop(0 - x, x - 1, 1)
;; fast program: (2 * ((((if x <= 0 then 1 else x) mod 2) + (x * x)) + x)) - 1
(set-logic UFNIA)
(define-fun modf ((a Int) (b Int)) Int (ite (< 0 b) (mod a b) (- (mod (- a) (- b)))))
(declare-fun f0 (Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (- 0 x))))
(assert (forall ((x Int)) (= (g0 x) (- x 1))))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ (* 2 (+ (* x x) x)) (v0 x)))))
(assert (forall ((x Int)) (= (fast x) (- (* 2 (+ (+ (modf (ite (<= x 0) 1 x) 2) (* x x)) x)) 1))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
