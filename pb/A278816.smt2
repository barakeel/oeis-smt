;; sequence(s): A278816
;; terms: 0 1 2 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;; small program: if (x - 2) <= 0 then x else loop(2 + (x + y), 2, x)
;; fast program: ((if (x - 2) <= 0 then 1 else (2 * (2 + 2))) - 1) + x
(set-logic UFNIA)
(declare-fun f0 (Int Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ 2 (+ x y)))))
(assert (= g0 2))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (ite (<= (- x 2) 0) x (v0 x)))))
(assert (forall ((x Int)) (= (fast x) (+ (- (ite (<= (- x 2) 0) 1 (* 2 (+ 2 2))) 1) x))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
