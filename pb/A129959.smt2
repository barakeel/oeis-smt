;; sequence(s): A129959
;; terms: 1 1 8 24 59 115 202 322 485 693 956 1276 1663 2119 2654 3270 3977 4777 5680 6688
;; small program: loop(((2 - y) * y) - x, x, 1) + ((x * x) * x)
;; fast program: (1 + ((((x - 1) + x) * (x * x)) div 2)) + (x div 2)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (- (* (- 2 y) y) x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ (v0 x) (* (* x x) x)))))
(assert (forall ((x Int)) (= (fast x) (+ (+ 1 (divf (* (+ (- x 1) x) (* x x)) 2)) (divf x 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
