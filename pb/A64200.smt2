;; sequence(s): A64200
;; terms: 0 0 24 72 144 240 360 504 672 864 1080 1320 1584 1872 2184 2520 2880 3264 3672 4104
;; small program: (x - 1) * loop((2 + y) * x, 2, x)
;; fast program: 2 * (2 * ((1 + 2) * ((x * x) - x)))
(set-logic UFNIA)
(declare-fun f0 (Int Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (* (+ 2 y) x))))
(assert (= g0 2))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (* (- x 1) (v0 x)))))
(assert (forall ((x Int)) (= (fast x) (* 2 (* 2 (* (+ 1 2) (- (* x x) x)))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
