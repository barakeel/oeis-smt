;; sequence(s): A77748
;; terms: 1 2 4 2 2
;; small program: if (x - 2) <= 0 then ((if x <= 0 then 1 else x) + x) else 2
;; fast program: if x <= 0 then 1 else (2 * loop(1, x - 2, x))
(set-logic UFNIA)
(declare-fun small (Int) Int)
(declare-fun f0 () Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (small x) (ite (<= (- x 2) 0) (+ (ite (<= x 0) 1 x) x) 2))))
(assert (= f0 1))
(assert (forall ((x Int)) (= (g0 x) (- x 2))))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y f0))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (fast x) (ite (<= x 0) 1 (* 2 (v0 x))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
