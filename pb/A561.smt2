;; sequence(s): A561
;; terms: 6 44 145 336 644 1096 1719 2540 3586 4884 6461 8344 10560 13136 16099 19476 23294 27580 32361 37664
;; small program: (1 + (2 + x)) * loop(1 + (x + y), (x + x) + x, 2)
;; fast program: (2 + ((1 + 2) * ((1 + 2) * (((x * x) + x) div 2)))) * (1 + (2 + x))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ 1 (+ x y)))))
(assert (forall ((x Int)) (= (g0 x) (+ (+ x x) x))))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (* (+ 1 (+ 2 x)) (v0 x)))))
(assert (forall ((x Int)) (= (fast x) (* (+ 2 (* (+ 1 2) (* (+ 1 2) (divf (+ (* x x) x) 2)))) (+ 1 (+ 2 x))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
