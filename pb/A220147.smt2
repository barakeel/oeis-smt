;; sequence(s): A220147
;; terms: 3 11 26 52 95 163 266 416 627 915 1298 1796 2431 3227 4210 5408 6851 8571 10602 12980
;; small program: ((((((1 + loop(loop(x + y, y - 2, x) + y, x, x)) + x) + x) + x) * (2 + x)) div 2) + 2
;; fast program: ((((((((x * x) * x) - x) div (2 + (2 + 2))) + (1 + (2 * (x + x)))) + x) * (2 + x)) div 2) + 2
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f1 (Int Int) Int)
(declare-fun g1 (Int Int) Int)
(declare-fun h1 (Int) Int)
(declare-fun u1 (Int Int) Int)
(declare-fun v1 (Int Int) Int)
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f1 x y) (+ x y))))
(assert (forall ((x Int) (y Int)) (= (g1 x y) (- y 2))))
(assert (forall ((x Int)) (= (h1 x) x)))
(assert (forall ((x Int) (y Int)) (= (u1 x y) (ite (<= x 0) y (f1 (u1 (- x 1) y) x)))))
(assert (forall ((x Int) (y Int)) (= (v1 x y) (u1 (g1 x y) (h1 x)))))
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (v1 x y) y))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (small x) (+ (divf (* (+ (+ (+ (+ 1 (v0 x)) x) x) x) (+ 2 x)) 2) 2))))
(assert (forall ((x Int)) (= (fast x) (+ (divf (* (+ (+ (divf (- (* (* x x) x) x) (+ 2 (+ 2 2))) (+ 1 (* 2 (+ x x)))) x) (+ 2 x)) 2) 2))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
