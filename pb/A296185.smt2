;; sequence(s): A296185-A297970
;; terms: 112 240 368 496 624 752 880 1008 1136 1264 1392 1520 1648 1776 1904 2032 2160 2288 2416 2544
;; small program: loop(2 * ((x + x) + y), 2 + 2, x) div 2
;; fast program: 2 * (2 * (2 * ((2 * (2 * (2 * (2 + (x + x))))) - 2)))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (* 2 (+ (+ x x) y)))))
(assert (= g0 (+ 2 2)))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (divf (v0 x) 2))))
(assert (forall ((x Int)) (= (fast x) (* 2 (* 2 (* 2 (- (* 2 (* 2 (* 2 (+ 2 (+ x x))))) 2)))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
