;; sequence(s): A218471
;; terms: 0 2 11 27 50 80 117 161 212 270 335 407 486 572 665 765 872 986 1107 1235
;; small program: (2 * (2 * (x * x))) - loop(x + y, x, x)
;; fast program: ((((1 + 2) * ((x - 1) + x)) + x) * x) div 2
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ x y))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (small x) (- (* 2 (* 2 (* x x))) (v0 x)))))
(assert (forall ((x Int)) (= (fast x) (divf (* (+ (* (+ 1 2) (+ (- x 1) x)) x) x) 2))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
