;; sequence(s): A217200
;; terms: 2 6 23 78 207 458 891 1578 2603 4062 6063 8726 12183 16578 22067 28818 37011 46838 58503 72222
;; small program: ((loop(2 + (y * y), (x * x) + x, 0) div 2) + x) + 2
;; fast program: (1 + ((2 + x) * ((((x * x) * x) + x) div 2))) + (if x <= 0 then 1 else 2)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ 2 (* y y)))))
(assert (forall ((x Int)) (= (g0 x) (+ (* x x) x))))
(assert (= h0 0))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ (+ (divf (v0 x) 2) x) 2))))
(assert (forall ((x Int)) (= (fast x) (+ (+ 1 (* (+ 2 x) (divf (+ (* (* x x) x) x) 2))) (ite (<= x 0) 1 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
