;; sequence(s): A8512
;; terms: 2 32 242 992 2882 6752 13682 24992 42242 67232 102002 148832 210242 288992 388082 510752 660482 840992 1056242 1310432
;; small program: loop2((((2 + (2 + x)) * y) * y) + x, y, 2, 1, x) * 2
;; fast program: 2 + ((2 + (x * x)) * ((x * x) * (((2 + 2) * 2) + 2)))
(set-logic UFNIA)
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int Int) Int)
(declare-fun h0 () Int)
(declare-fun i0 () Int)
(declare-fun j0 (Int) Int)
(declare-fun u0 (Int Int Int) Int)
(declare-fun v0 (Int Int Int) Int)
(declare-fun w0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (* (* (+ 2 (+ 2 x)) y) y) x))))
(assert (forall ((x Int) (y Int)) (= (g0 x y) y)))
(assert (= h0 2))
(assert (= i0 1))
(assert (forall ((x Int)) (= (j0 x) x)))
(assert (forall ((x Int) (y Int) (z Int)) (= (u0 x y z) (ite (<= x 0) y (f0 (u0 (- x 1) y z) (v0 (- x 1) y z))))))
(assert (forall ((x Int) (y Int) (z Int)) (= (v0 x y z) (ite (<= x 0) z (g0 (u0 (- x 1) y z) (v0 (- x 1) y z))))))
(assert (forall ((x Int)) (= (w0 x) (u0 h0 i0 (j0 x)))))
(assert (forall ((x Int)) (= (small x) (* (w0 x) 2))))
(assert (forall ((x Int)) (= (fast x) (+ 2 (* (+ 2 (* x x)) (* (* x x) (+ (* (+ 2 2) 2) 2)))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
