;; sequence(s): A135916
;; terms: 0 0 15 75 222 510 1005 1785 2940 4572 6795 9735 13530 18330 24297 31605 40440 51000 63495 78147
;; small program: (((x * x) - x) * loop((2 * (2 + y)) + x, x, 1)) div 2
;; fast program: (1 + (((2 + (2 + x)) * x) + x)) * (((x * x) - x) div 2)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (* 2 (+ 2 y)) x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (divf (* (- (* x x) x) (v0 x)) 2))))
(assert (forall ((x Int)) (= (fast x) (* (+ 1 (+ (* (+ 2 (+ 2 x)) x) x)) (divf (- (* x x) x) 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
