;; sequence(s): A100171
;; terms: 1 14 60 160 335 606 994 1520 2205 3070 4136 5424 6955 8750 10830 13216 15929 18990 22420 26240
;; small program: (1 + loop(2 + (x + y), x, (1 + 2) * (x * x))) * (1 + x)
;; fast program: (1 + (((1 + (2 + 2)) * (((x * x) + x) div 2)) + (x * x))) * (1 + x)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ 2 (+ x y)))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (forall ((x Int)) (= (h0 x) (* (+ 1 2) (* x x)))))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (small x) (* (+ 1 (v0 x)) (+ 1 x)))))
(assert (forall ((x Int)) (= (fast x) (* (+ 1 (+ (* (+ 1 (+ 2 2)) (divf (+ (* x x) x) 2)) (* x x))) (+ 1 x)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
