;; sequence(s): A227012
;; terms: 1 4 16 43 91 166 275 422 614 857 1158 1521 1953 2460 3049 3724 4492 5359 6332 7415
;; small program: (1 + (loop(((x * x) * y) + x, 2, x) + x)) div (1 + (x + x))
;; fast program: ((1 + (2 * (x * x))) * (1 + ((2 + x) * x))) div (1 + (x + x))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (* (* x x) y) x))))
(assert (= g0 2))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (divf (+ 1 (+ (v0 x) x)) (+ 1 (+ x x))))))
(assert (forall ((x Int)) (= (fast x) (divf (* (+ 1 (* 2 (* x x))) (+ 1 (* (+ 2 x) x))) (+ 1 (+ x x))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
