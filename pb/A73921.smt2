;; sequence(s): A73921
;; terms: 1 41 43 45 47
;; small program: 1 + (((if x <= 0 then 0 else loop(2 + (x * x), 2, 2)) + x) + x)
;; fast program: (2 * ((if x <= 0 then 1 else (2 * (2 + (2 * (2 + 2))))) + x)) - 1
(set-logic UFNIA)
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 () Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (+ 2 (* x x)))))
(assert (= g0 2))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (= v0 (u0 g0 h0)))
(assert (forall ((x Int)) (= (small x) (+ 1 (+ (+ (ite (<= x 0) 0 v0) x) x)))))
(assert (forall ((x Int)) (= (fast x) (- (* 2 (+ (ite (<= x 0) 1 (* 2 (+ 2 (* 2 (+ 2 2))))) x)) 1))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
