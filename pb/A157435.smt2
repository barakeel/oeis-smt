;; sequence(s): A157435
;; terms: 696 760 824 888 952 1016 1080 1144 1208 1272 1336 1400 1464 1528 1592 1656 1720 1784 1848 1912
;; small program: loop2((2 + (x + y)) * y, 2 + 2, 2 + 2, x, 1)
;; fast program: ((((1 + (2 + (2 * (2 + 2)))) + x) * ((2 + 2) * 2)) - 1) * ((2 + 2) * 2)
(set-logic UFNIA)
(declare-fun f0 (Int Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 () Int)
(declare-fun i0 (Int) Int)
(declare-fun j0 () Int)
(declare-fun u0 (Int Int Int) Int)
(declare-fun v0 (Int Int Int) Int)
(declare-fun w0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (* (+ 2 (+ x y)) y))))
(assert (= g0 (+ 2 2)))
(assert (= h0 (+ 2 2)))
(assert (forall ((x Int)) (= (i0 x) x)))
(assert (= j0 1))
(assert (forall ((x Int) (y Int) (z Int)) (= (u0 x y z) (ite (<= x 0) y (f0 (u0 (- x 1) y z) (v0 (- x 1) y z))))))
(assert (forall ((x Int) (y Int) (z Int)) (= (v0 x y z) (ite (<= x 0) z g0))))
(assert (forall ((x Int)) (= (w0 x) (u0 h0 (i0 x) j0))))
(assert (forall ((x Int)) (= (small x) (w0 x))))
(assert (forall ((x Int)) (= (fast x) (* (- (* (+ (+ 1 (+ 2 (* 2 (+ 2 2)))) x) (* (+ 2 2) 2)) 1) (* (+ 2 2) 2)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
