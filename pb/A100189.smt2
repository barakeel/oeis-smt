;; sequence(s): A100189
;; terms: 1 6 27 92 245 546 1071 1912 3177 4990 7491 10836 15197 20762 27735 36336 46801 59382 74347 91980
;; small program: (1 + (2 * loop(((y * y) - y) + x, x, x))) * (1 + x)
;; fast program: (1 + (2 * (((2 + (x * x)) * x) div (1 + 2)))) * (1 + x)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ (- (* y y) y) x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (small x) (* (+ 1 (* 2 (v0 x))) (+ 1 x)))))
(assert (forall ((x Int)) (= (fast x) (* (+ 1 (* 2 (divf (* (+ 2 (* x x)) x) (+ 1 2)))) (+ 1 x)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
