;; sequence(s): A327606
;; terms: 0 1 8 69 712 8705 123456 1994293 36163184 727518177 16081980760 387499155461 10108673620728 283851555270049 8536572699232592 273759055527114165 9325469762472018016 336282091434597013313 12797935594025234906664 512609204063389138693957
;; small program: (loop(1 + (2 * (x * y)), x, 1) * (1 + (x + x))) div (2 * (2 + 2))
;; fast program: (((loop(1 + (2 * (x * y)), x - 1, 1) * ((x + 1) + x)) div (2 + 2)) + 1) * x
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun f1 (Int Int) Int)
(declare-fun g1 (Int) Int)
(declare-fun h1 () Int)
(declare-fun u1 (Int Int) Int)
(declare-fun v1 (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ 1 (* 2 (* x y))))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (divf (* (v0 x) (+ 1 (+ x x))) (* 2 (+ 2 2))))))
(assert (forall ((x Int) (y Int)) (= (f1 x y) (+ 1 (* 2 (* x y))))))
(assert (forall ((x Int)) (= (g1 x) (- x 1))))
(assert (= h1 1))
(assert (forall ((x Int) (y Int)) (= (u1 x y) (ite (<= x 0) y (f1 (u1 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v1 x) (u1 (g1 x) h1))))
(assert (forall ((x Int)) (= (fast x) (* (+ (divf (* (v1 x) (+ (+ x 1) x)) (+ 2 2)) 1) x))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
