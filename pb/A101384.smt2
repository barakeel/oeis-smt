;; sequence(s): A101384
;; terms: 0 0 1 60 594 3040 10875 30996 75460 163584 324405 599500 1046166 1740960 2783599 4301220 6453000 9435136 13486185 18892764
;; small program: (1 + ((x - 2) * x)) * (loop((x * x) - x, 2, x) div 2)
;; fast program: ((1 + ((x - 2) * (x * x))) * (((x * x) - x) div 2)) * (x - 1)
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (f0 x) (- (* x x) x))))
(assert (= g0 2))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (small x) (* (+ 1 (* (- x 2) x)) (divf (v0 x) 2)))))
(assert (forall ((x Int)) (= (fast x) (* (* (+ 1 (* (- x 2) (* x x))) (divf (- (* x x) x) 2)) (- x 1)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
