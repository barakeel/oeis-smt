;; sequence(s): A171604
;; terms: 1 1 1 1 1 3 4
;; small program: if ((x - 2) - 2) <= 0 then 1 else (x - 2)
;; fast program: loop(2 + y, (x - 2) - 2, 1)
(set-logic UFNIA)
(declare-fun small (Int) Int)
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (small x) (ite (<= (- (- x 2) 2) 0) 1 (- x 2)))))
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ 2 y))))
(assert (forall ((x Int)) (= (g0 x) (- (- x 2) 2))))
(assert (= h0 1))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (fast x) (v0 x))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
