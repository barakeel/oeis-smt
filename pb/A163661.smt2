;; sequence(s): A163661
;; terms: 0 12 35 75 138 230 357 525 740 1008 1335 1727 2190 2730 3353 4065 4872 5780 6795 7923
;; small program: loop(x + y, x, ((2 * (2 + 2)) + (x * (2 + x))) * x)
;; fast program: ((((2 * ((2 * (2 + 2)) + ((2 + x) * x))) + x) * x) + x) div 2
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (+ x y))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (forall ((x Int)) (= (h0 x) (* (+ (* 2 (+ 2 2)) (* x (+ 2 x))) x))))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (small x) (v0 x))))
(assert (forall ((x Int)) (= (fast x) (divf (+ (* (+ (* 2 (+ (* 2 (+ 2 2)) (* (+ 2 x) x))) x) x) x) 2))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
