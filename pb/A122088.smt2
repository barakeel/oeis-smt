;; sequence(s): A122088
;; terms: 1 11 6 16 11 21 16 26 21 31 26 36 31 41 36 46 41 51 46 56
;; small program: 1 + ((1 + (2 + 2)) * loop((1 + y) - x, x, 0))
;; fast program: 1 + ((1 + (2 + 2)) * ((x - ((1 + 2) * (x div 2))) + x))
(set-logic UFNIA)
(define-fun divf ((a Int) (b Int)) Int (ite (< 0 b) (div a b) (div (- a) (- b))))
(declare-fun f0 (Int Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun small (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int) (y Int)) (= (f0 x y) (- (+ 1 y) x))))
(assert (forall ((x Int)) (= (g0 x) x)))
(assert (= h0 0))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y) x)))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (small x) (+ 1 (* (+ 1 (+ 2 2)) (v0 x))))))
(assert (forall ((x Int)) (= (fast x) (+ 1 (* (+ 1 (+ 2 2)) (+ (- x (* (+ 1 2) (divf x 2))) x))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
